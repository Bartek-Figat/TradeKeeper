http {
    # Limit request size to prevent large payloads
    client_max_body_size 10M;

    # Rate limiting to prevent abuse
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    # Enable Brotli compression
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Optimize gzip settings
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; object-src 'none';";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # HSTS
    add_header Referrer-Policy "no-referrer-when-downgrade";
    # add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Caching
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    upstream backend {
        server backend:8080; # Primary backend service
        server backend_2:8081; # Additional backend instance
        server backend_3:8082; # Additional backend instance
        # Add more backend instances as needed
    }

    server {
        listen 80;
        server_name localhost; # Use localhost for development

        # Serve React app
        location / {
            proxy_pass http://react:3000; # Proxy to React development server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Load balancing for Node.js backend
        location /api {
            # Apply rate limiting
            # limit_req zone=one burst=5 nodelay;
            proxy_pass http://backend; # Pass requests to the upstream block
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache my_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
        }
    }
}